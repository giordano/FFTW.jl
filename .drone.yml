---
kind: pipeline
name: linux - arm - Julia 1.0

platform:
  os: linux
  arch: arm

steps:
- name: build
  image: julia:1.0
  commands:
  - ldd $(which julia)
  - "julia --project=. --check-bounds=yes --color=yes -e 'using Pkg; Pkg.instantiate(); Pkg.build(); using FFTW; using Libdl; Libdl.dlopen(FFTW.libfftw3)'"
  - "julia --project=. --check-bounds=yes --color=yes -e 'using FFTW; run(`ldd $(FFTW.libfftw3)`)'"
  - "julia --project=. --check-bounds=yes --color=yes -e 'using InteractiveUtils; versioninfo(verbose=true); using Pkg; Pkg.build(); Pkg.test(coverage=true)'"

---
kind: pipeline
name: linux - arm64 - Julia 1.0

platform:
  os: linux
  arch: arm64

steps:
- name: build
  image: julia:1.0
  commands:
  - ldd $(which julia)
  - "julia --project=. --check-bounds=yes --color=yes -e 'using Pkg; Pkg.instantiate(); Pkg.build(); using FFTW; using Libdl; Libdl.dlopen(FFTW.libfftw3)'"
  - "julia --project=. --check-bounds=yes --color=yes -e 'using FFTW; run(`ldd $(FFTW.libfftw3)`)'"
  - "julia --project=. --check-bounds=yes --color=yes -e 'using InteractiveUtils; versioninfo(verbose=true); using Pkg; Pkg.build(); Pkg.test(coverage=true)'"

---
kind: pipeline
name: linux - arm64 - Julia 1.1

platform:
  os: linux
  arch: arm64

steps:
- name: build
  image: julia:1.1
  commands:
  - ldd $(which julia)
  - "julia --project=. --check-bounds=yes --color=yes -e 'using Pkg; Pkg.instantiate(); Pkg.build(); using FFTW; using Libdl; Libdl.dlopen(FFTW.libfftw3)'"
  - "julia --project=. --check-bounds=yes --color=yes -e 'using FFTW; run(`ldd $(FFTW.libfftw3)`)'"
  - "julia --project=. --check-bounds=yes --color=yes -e 'using InteractiveUtils; versioninfo(verbose=true); using Pkg; Pkg.build(); Pkg.test(coverage=true)'"

...
